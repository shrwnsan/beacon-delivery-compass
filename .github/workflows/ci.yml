name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 0 * * 0'  # Weekly scheduled run

# Cancel in-progress runs when new commits are pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        os: [ubuntu-latest]
        # Enable Windows and macOS testing for the latest Python version
        include:
          - python-version: "3.12"
            os: windows-latest
          - python-version: "3.12"
            os: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          cache-dependency-path: 'pyproject.toml'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
          pip install ruff typeguard

      - name: Lint with ruff
        run: |
          ruff check .
          ruff format --check .

      - name: Type checking with mypy
        run: |
          mypy src/beaconled

      - name: Run unit tests
        run: |
          pytest tests/unit -m "not performance" --cov=beaconled --cov-report=xml

      - name: Run integration tests
        if: matrix.python-version == '3.12' && runner.os == 'Linux'
        run: |
          pytest tests/integration -v

      - name: Run performance tests
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        run: |
          pytest tests/performance -m performance -v --durations=0

      - name: Upload coverage to Codecov
        if: runner.os == 'Linux' && matrix.python-version == '3.12'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false

  security:
    name: Security Checks
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install safety bandit

      - name: Check for known vulnerabilities
        run: safety check --full-report

      - name: Run security linter
        run: bandit -r src/beaconled -c pyproject.toml
